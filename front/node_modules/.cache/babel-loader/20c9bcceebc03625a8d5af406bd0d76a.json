{"ast":null,"code":"var _jsxFileName = \"C:\\\\yak-projects\\\\react\\\\yakyakPlus\\\\imdbstreamer\\\\front\\\\src\\\\components\\\\EpisodeDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\"; // component to display card the details of the episode that the user clicked on\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EpisodeDetails = () => {\n  _s();\n\n  const location = useLocation();\n  const [details, setDetails] = useState(location.state.details);\n  const [type, setType] = useState(location.state.type);\n  useEffect(() => {\n    setType(location.state.type);\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 text-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500\" + details.still_path,\n          alt: \"\",\n          className: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-warning\",\n          children: details.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: details.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EpisodeDetails, \"AOkUItGoxU12VETATbVOKqtdhQg=\", false, function () {\n  return [useLocation];\n});\n\n_c = EpisodeDetails;\nexport default EpisodeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodeDetails\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","EpisodeDetails","location","details","setDetails","state","type","setType","still_path","name","overview"],"sources":["C:/yak-projects/react/yakyakPlus/imdbstreamer/front/src/components/EpisodeDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// component to display card the details of the episode that the user clicked on\r\nconst EpisodeDetails = () => {\r\n    const location = useLocation();\r\n    const [details, setDetails] = useState(location.state.details);\r\n    const [type, setType] = useState(location.state.type);\r\n    useEffect(() => {\r\n        setType(location.state.type);\r\n    }, [type]);\r\n\r\n    return (\r\n        <div className=\"container mt-5 text-light\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-4\">\r\n                    <img\r\n                        src={\r\n                            \"https://image.tmdb.org/t/p/w500\" +\r\n                            details.still_path\r\n                        }\r\n                        alt=\"\"\r\n                        className=\"img-fluid\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md-8\">\r\n                    <h1 className=\"text-warning\">{details.name}</h1>\r\n\r\n                    <p>{details.overview}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EpisodeDetails;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,QAAQ,CAACG,KAAT,CAAeF,OAAhB,CAAtC;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACI,QAAQ,CAACG,KAAT,CAAeC,IAAhB,CAAhC;EACAP,SAAS,CAAC,MAAM;IACZQ,OAAO,CAACL,QAAQ,CAACG,KAAT,CAAeC,IAAhB,CAAP;EACH,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,2BAAf;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,wBACI;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACI;UACI,GAAG,EACC,oCACAH,OAAO,CAACK,UAHhB;UAKI,GAAG,EAAC,EALR;UAMI,SAAS,EAAC;QANd;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACI;UAAI,SAAS,EAAC,cAAd;UAAA,UAA8BL,OAAO,CAACM;QAAtC;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAA,UAAIN,OAAO,CAACO;QAAZ;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CA7BD;;GAAMT,c;UACeD,W;;;KADfC,c;AA+BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}