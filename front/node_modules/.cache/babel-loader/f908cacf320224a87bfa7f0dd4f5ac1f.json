{"ast":null,"code":"var _jsxFileName = \"C:\\\\yak-projects\\\\react\\\\imdbstreamer\\\\imdbstreamer\\\\src\\\\components\\\\Episodes.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Episodes = () => {\n  _s();\n\n  const [episodes, setEpisodes] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function getEpisodes() {\n      const response = await axios.get(`https://api.themoviedb.org/3/tv/${location.state.id}/season/${location.state.num}?api_key=3645948f6600ca84813cb3900fecc62a&language=en-US`);\n      setEpisodes(response.data);\n      const data = response.data;\n      console.log(data);\n    }\n\n    getEpisodes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-lg-5 row-cols-md-4 row-cols-2\",\n      children: episodes.episodes && episodes.episodes.map(episode => {\n        console.log(episode);\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/watch\",\n          state: {\n            season: episode.season_number,\n            id: location.state.id,\n            episode: episode.episode_number,\n            type: \"tv\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            image: \"https://image.tmdb.org/t/p/w500\" + episode.still_path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              textDecoration: none\n            },\n            className: \"text-decoration-none text-light\",\n            children: [\"Episode \", episode.episode_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-decoration-none text-light\",\n            children: episode.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Episodes, \"9agf6j9iaLceHi0sL32xZUBTMQ4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Episodes;\nexport default Episodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"names":["axios","useState","useLocation","Link","useEffect","Card","Episodes","episodes","setEpisodes","location","getEpisodes","response","get","state","id","num","data","console","log","map","episode","season","season_number","episode_number","type","still_path","textDecoration","none","name"],"sources":["C:/yak-projects/react/imdbstreamer/imdbstreamer/src/components/Episodes.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nconst Episodes = () => {\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        async function getEpisodes() {\r\n            const response = await axios.get(\r\n                `https://api.themoviedb.org/3/tv/${location.state.id}/season/${location.state.num}?api_key=3645948f6600ca84813cb3900fecc62a&language=en-US`\r\n            );\r\n            setEpisodes(response.data);\r\n            const data = response.data;\r\n            console.log(data);\r\n        }\r\n        getEpisodes();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5 \">\r\n            <div className=\"row row-cols-lg-5 row-cols-md-4 row-cols-2\">\r\n                {episodes.episodes &&\r\n                    episodes.episodes.map((episode) => {\r\n                        console.log(episode);\r\n                        return (\r\n                            <Link\r\n                                to=\"/watch\"\r\n                                state={{\r\n                                    season: episode.season_number,\r\n                                    id: location.state.id,\r\n                                    episode: episode.episode_number,\r\n                                    type: \"tv\",\r\n                                }}\r\n                            >\r\n                                <Card\r\n                                    image={\r\n                                        \"https://image.tmdb.org/t/p/w500\" +\r\n                                        episode.still_path\r\n                                    }\r\n                                ></Card>\r\n                                <h5\r\n                                    style={{ textDecoration: none }}\r\n                                    className=\"text-decoration-none text-light\"\r\n                                >\r\n                                    Episode {episode.episode_number}\r\n                                </h5>\r\n                                <p className=\"text-decoration-none text-light\">\r\n                                    {episode.name}\r\n                                </p>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Episodes;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMQ,QAAQ,GAAGP,WAAW,EAA5B;EAEAE,SAAS,CAAC,MAAM;IACZ,eAAeM,WAAf,GAA6B;MACzB,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAClB,mCAAkCH,QAAQ,CAACI,KAAT,CAAeC,EAAG,WAAUL,QAAQ,CAACI,KAAT,CAAeE,GAAI,0DAD/D,CAAvB;MAGAP,WAAW,CAACG,QAAQ,CAACK,IAAV,CAAX;MACA,MAAMA,IAAI,GAAGL,QAAQ,CAACK,IAAtB;MACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACH;;IACDN,WAAW;EACd,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,4CAAf;MAAA,UACKH,QAAQ,CAACA,QAAT,IACGA,QAAQ,CAACA,QAAT,CAAkBY,GAAlB,CAAuBC,OAAD,IAAa;QAC/BH,OAAO,CAACC,GAAR,CAAYE,OAAZ;QACA,oBACI,QAAC,IAAD;UACI,EAAE,EAAC,QADP;UAEI,KAAK,EAAE;YACHC,MAAM,EAAED,OAAO,CAACE,aADb;YAEHR,EAAE,EAAEL,QAAQ,CAACI,KAAT,CAAeC,EAFhB;YAGHM,OAAO,EAAEA,OAAO,CAACG,cAHd;YAIHC,IAAI,EAAE;UAJH,CAFX;UAAA,wBASI,QAAC,IAAD;YACI,KAAK,EACD,oCACAJ,OAAO,CAACK;UAHhB;YAAA;YAAA;YAAA;UAAA,QATJ,eAeI;YACI,KAAK,EAAE;cAAEC,cAAc,EAAEC;YAAlB,CADX;YAEI,SAAS,EAAC,iCAFd;YAAA,uBAIaP,OAAO,CAACG,cAJrB;UAAA;YAAA;YAAA;YAAA;UAAA,QAfJ,eAqBI;YAAG,SAAS,EAAC,iCAAb;YAAA,UACKH,OAAO,CAACQ;UADb;YAAA;YAAA;YAAA;UAAA,QArBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MA2BH,CA7BD;IAFR;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH,CArDD;;GAAMtB,Q;UAEeJ,W;;;KAFfI,Q;AAuDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}